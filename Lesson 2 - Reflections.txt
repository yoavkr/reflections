Lesson 2 reflection:

Q:What happens when you initialize a repository? Why do you need to do it?

A: When you initialize a git it creates all of the meta-data files needed by git in order to track changes between commits.
~~~~
Q:How is the staging area different from the working directory and the repository? What value do you think it offers?

A:It is used as a mediator between the working directory and the repository. So can leave files out of a certain commit.
~~~~
Q:How can you use the staging area to make sure you have one commit per logical change?

A:If you changed multiple files before you made a commit, you can add and commit file by file to represent every logical change to a file.
~~~~
Q:What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A:It gives you a named representation to a commit, which will be easier to reference to.
~~~~
Q:How do the diagrams help you visualize the branch structure?

A:Helps you see the different branches available and the links between them and their parents.
~~~~
Q:What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A:Merging 2 branches together enables us to apply changes from 2 diferrent branches. We represent it in the diagram the way we do because all commits will now be part of the same branch after the merge.
~~~~
Q:What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

A:When using automatic merging you don't always know what you're meging, which means that manually you'll be aware to what goes where in the code.